<html>
<head>
<title>
Boids!
</title>
<script type="text/javascript">
canvasWidth = canvasHeight = 500;
numBoid = 20;
numPred = 0;
boid = new Array();
pred = new Array();
interactDistPos = 40;
interactDistAvoid = 10;
interactDistVel = 50;
flockTogetherFactor = 10000;
relativeVelFactor = 8;
spacingScalar = .3;
maxSpeed = .9;

function updateBoids()
{
	// Currently this is naively implemented (or at least it will be)
	// Change later! Currently concern is getting this working.

	// Move to relative position of nearby boids
	for (i = 0; i < numBoid; i++)
	{
		var xTot = 0.0;
		var yTot = 0.0;
		var xDir = 0;
		var yDir = 0;
		for (j = 0; j < numBoid; j++)
		{
			if (i == j)
				continue;

			var dist = Math.sqrt(Math.pow(boid[i].x - boid[j].x, 2) +
						Math.pow(boid[i].y - boid[j].y, 2));

			if (dist > interactDistPos)
				continue;

			xTot += boid[j].x;
			yTot += boid[j].y;
		}

		boid[i].dx += ((xTot / (numBoid - 1)) / flockTogetherFactor);
		boid[i].dy += ((yTot / (numBoid - 1)) / flockTogetherFactor);
	}

	// Avoid other boids/obstacles
	for (i = 0; i < numBoid; i++)
	{
		var xAdj = 0.0;
		var yAdj = 0.0;
		for (j = 0; j < numBoid; j++)
		{
			if (i == j)
				continue;

			var dist = Math.sqrt(Math.pow(boid[i].x - boid[j].x, 2) +
						Math.pow(boid[i].y - boid[j].y, 2));
			if (dist < interactDistAvoid)
			{
				xAdj += (boid[i].x - boid[j].x) / (dist * numBoid);
				yAdj += (boid[i].y - boid[j].y) / (dist * numBoid);
			}
		}
		boid[i].dx += xAdj;
		boid[i].dy += yAdj;
	}

	// Match nearby boid velocity
	for (i = 0; i < numBoid; i++)
	{
		var dxTot = 0.0; 
		var dyTot = 0.0;
		for (j = 0; j < numBoid; j++)
		{
			if (i == j)
				continue;

			var dist = Math.sqrt(Math.pow(boid[i].x - boid[j].x, 2) +
						Math.pow(boid[i].y - boid[j].y, 2));

			if (dist > interactDistVel)
				continue;

			dxTot += boid[j].dx;
			dyTot += boid[j].dy;
		}

		boid[i].dx += (dxTot / (numBoid - 1)) / relativeVelFactor;
		boid[i].dy += (dyTot / (numBoid - 1)) / relativeVelFactor;
	}

	// Wrap around to other side of screen
	for (i = 0; i < numBoid; i++)
	{
		if (boid[i].x < 0 || boid[i].x > canvasWidth - 1)
		{
			boid[i].x = (boid[i].x > canvasWidth - 1) ? boid[i].x - canvasWidth : boid[i].x + canvasWidth;
		}

		if (boid[i].y < 0 || boid[i].y > 499)
		{
			boid[i].y = (boid[i].y > canvasWidth - 1) ? boid[i].y - canvasWidth : boid[i].y + canvasWidth;
		}
	}

	// Update boid positions
	for (i = 0; i < numBoid; i++)
	{
		// Keeps the max speed of the boids down
		if (boid[i].dx > maxSpeed || boid[i].dx < -maxSpeed)
		{
			var sign = 0;
			sign = (boid[i].dx == 0) ? 0 : ((boid[i].dx < 0) ? -1 : 1);
			boid[i].dx = sign * maxSpeed;
		}

		if (boid[i].dy > maxSpeed || boid[i].dy < -maxSpeed)
		{
			var sign = 0;
			sign = (boid[i].dy == 0) ? 0 : ((boid[i].dy < 0) ? -1 : 1);
			boid[i].dy = sign * maxSpeed;
		}
		boid[i].x += boid[i].dx;
		boid[i].y += boid[i].dy;
	} 
}

function updatePred()
{
}

function draw()
{
	updateBoids();
	//updatePred();

	var drawContext = document.getElementById('canvas').getContext('2d');
	drawContext.fillStyle = "rgb(0, 0, 0)";
	drawContext.fillRect(0, 0, canvasWidth, canvasHeight);

	// Draw boid
	drawContext.fillStyle = "rgb(0, 255, 0)";
	for (i = 0; i < numBoid; i++)
	{
		drawContext.fillRect(boid[i].x, boid[i].y, 5, 5);
	}

	// Draw Predators
	drawContext.fillStyle = "rgb(255, 0, 0)";
	for (i= 0; i < numPred; i++)
	{
		drawContext.fillRect(pred[i].x, pred[i].y, 5, 5);
	}
}

function init() 
{
	for (i = 0; i < numBoid; i++)
	{
		boid[i] = {};
		boid[i].x = Math.floor(Math.random() * canvasWidth) + 0.5;
		boid[i].y = Math.floor(Math.random() * canvasWidth) + 0.5;
		var xDir = Math.floor(Math.random() + .5);
		var yDir = Math.floor(Math.random() + .5);
		xDir = (xDir == 1) ? 1 : -1;
		yDir = (yDir == 1) ? 1 : -1;
		boid[i].dx = xDir * Math.random();
		boid[i].dy = yDir * Math.random();
	}

	for (i = 0; i < numPred; i++)
	{
		pred[i] = {};
		pred[i].x = Math.floor(Math.random() * canvasWidth) + 0.5;
		pred[i].y = Math.floor(Math.random() * canvasWidth) + 0.5;
		pred[i].dx = 0;
		pred[i].dy = 0;
	}
	
	setInterval(draw, 1);
}

</script>
</head>
<body onload="init()">
<canvas id="canvas" width="500" height="500"></canvas>
</body>
</html>
